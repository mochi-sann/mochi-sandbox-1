/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
 * "Apple iPhone 13 Pro Max" (https://skfb.ly/o7nDN) by DatSketch is licensed under Creative Commons Attribution (http://creativecommons.org/licenses/by/4.0/).
*/
import React, { useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { GroupProps, useFrame } from "@react-three/fiber";

function Model(props: GroupProps) {
  const group = useRef();
  const { nodes, materials }: any = useGLTF("/iPhone13ProMax.glb");
  const [Rotets, setRotets] = useState(0)
  useFrame((state, delta) => setRotets((pre) => pre + 0.01))

  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, Rotets]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane.geometry}
          material={nodes.Plane.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane_1.geometry}
          material={materials.Frame2}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane_2.geometry}
          material={nodes.Plane_2.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane_3.geometry}
          material={nodes.Plane_3.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane_4.geometry}
          material={materials.Antenna}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Apple_Logo.geometry}
          material={materials.Logo}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane002.geometry}
          material={nodes.Plane002.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane002_1.geometry}
          material={materials.Bezel}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane002_2.geometry}
          material={materials.Wallpaper}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane002_3.geometry}
          material={nodes.Plane002_3.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane002_4.geometry}
          material={nodes.Plane002_4.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane002_5.geometry}
          material={nodes.Plane002_5.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane002_6.geometry}
          material={materials.Material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Body001.geometry}
          material={materials["Screen Glass"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Button.geometry}
          material={nodes.Button.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane004.geometry}
          material={nodes.Plane004.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane004_1.geometry}
          material={materials.Glass}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane004_2.geometry}
          material={nodes.Plane004_2.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane004_3.geometry}
          material={materials["Camera Frame.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane001.geometry}
          material={materials["Camera Frame"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane001_1.geometry}
          material={nodes.Plane001_1.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane001_2.geometry}
          material={materials["Black Glass"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane001_3.geometry}
          material={materials["Gray Glass"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane001_4.geometry}
          material={nodes.Plane001_4.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane001_5.geometry}
          material={nodes.Plane001_5.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane001_6.geometry}
          material={materials.Flash}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane001_7.geometry}
          material={nodes.Plane001_7.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Camera003.geometry}
          material={materials["Material.002"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle003.geometry}
          material={nodes.Circle003.material}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/iPhone13ProMax.glb");

export default Model
